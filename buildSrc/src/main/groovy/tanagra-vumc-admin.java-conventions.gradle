// Java conventions common for all of the code
plugins {
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
}

def useMavenLocal = false
repositories {
    if (useMavenLocal) {
        mavenLocal()
    }
    maven {
        // Terra proxy for maven central
        url "https://us-central1-maven.pkg.dev/dsp-artifact-registry/maven-central/"
    }
    mavenCentral()
    maven {
        url "https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-release/"
    }
    maven {
        url "https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-snapshot/"
    }
    google()
}

jacoco {
    toolVersion = '0.8.8'
}

// The default jacocoTestReport step cannot handle inputs from multiple gradle
// tasks. Instead, we define our own task to generate a combined report from the
// output of all tasks we've run.
task combinedJaCoCoReport(type: JacocoReport) {
    executionData fileTree("$buildDir/jacoco").include("*.exec")
    classDirectories.setFrom(files(project.sourceSets.main.output))
    sourceDirectories.setFrom(files(project.sourceSets.main.allSource.srcDirs))

    reports {
        xml.enabled(true)
        xml.destination = file("$buildDir/reports/jacoco/test/jacoco.xml")
    }

    // Ignore coverage of generated code.
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'bio/terra/workspace/generated/**')
        }))
    }

}

version = gradle.releaseVersion
group = 'bio.terra'
sourceCompatibility = JavaVersion.VERSION_11

// Spotless configuration
spotless {
    java {
        googleJavaFormat()
        targetExclude("${buildDir}/**", "**/generated/**")
    }
}
build.dependsOn spotlessApply


// for scans
if (hasProperty("buildScan")) {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

// Spotbugs configuration
spotbugs {
    toolVersion = '4.7.0'
    effort = 'max'
    excludeFilter = file("$rootDir/gradle/config/spotbugs/exclude.xml")
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.html")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.html")
            stylesheet = 'fancy.xsl'
        }
    }
}
