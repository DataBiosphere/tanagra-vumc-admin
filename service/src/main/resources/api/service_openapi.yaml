openapi: 3.0.3
info:
  title: Tanagra VUMC Admin Service
  description: |
    Tanagra VUMC Admin Service

  version: 0.0.1

servers:
  - url: /

security:
  - bearerAuth: []
  - authorization: [openid, email, profile]

paths:
  /admin/status:
    get:
      security: []
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags: [Unauthenticated]
      responses:
        200:
          description: Service can process requests
        500:
          description: Service is broken

  /admin/version:
    get:
      security: []
      summary: Returns the deployed version of the service
      operationId: serviceVersion
      tags: [Unauthenticated]
      responses:
        200:
          description: Version properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemVersion'
        500:
          $ref: '#/components/responses/ServerError'

  /admin/isAuthorized/{action}/{resourceType}/{resourceId}/{userEmail}:
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/ResourceId'
      - $ref: '#/components/parameters/UserEmail'
    get:
      tags: [Authorization]
      description: Check if an action by a user on a resource is authorized.
      operationId: isAuthorized
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/ServerError'

  /admin/listAuthorizedResources/{resourceType}/{userEmail}:
    parameters:
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/UserEmail'
    get:
      tags: [Authorization]
      description: List the resources a user is authorized to read.
      operationId: listAuthorizedResources
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceIdList'
        500:
          $ref: '#/components/responses/ServerError'

  /admin/core-auth-test:
    get:
      tags: [Authorization]
      description: Temporary endpoint to test service-to-service communication with core Tanagra.
      operationId: coreAuthTest
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreAuthTest'
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    UserEmail:
      name: userEmail
      in: path
      required: true
      schema:
        type: string

    Action:
      name: action
      in: path
      required: true
      schema:
        type: string
        enum: ['READ', 'CREATE', 'UPDATE', 'DELETE']

    ResourceType:
      name: resourceType
      in: path
      required: true
      schema:
        type: string
        enum: ['UNDERLAY', 'STUDY']

    ResourceId:
      name: resourceId
      in: path
      required: true
      schema:
        type: string

  responses:
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  schemas:
    CoreAuthTest:
      type: object
      properties:
        no-auth:
          type: string
        with-auth:
          type: string

    SystemVersion:
      type: object
      required: [gitTag, gitHash, github, build]
      properties:
        gitTag:
          type: string
          description: Git tag of currently deployed app.
        gitHash:
          type: string
          description: Git hash of currently deployed app.
        github:
          type: string
          description: Github link to currently deployed commit.
        build:
          type: string
          description: Version of the currently deployed app declared in build.gradle. Client and server versions are linked.

    ResourceIdList:
      type: array
      items:
        type: string

    ErrorReport:
      type: object
      required: [message, statusCode, causes]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    bearerAuth:
      type: http
      scheme: bearer
